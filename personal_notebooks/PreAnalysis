{"cells":[{"cell_type":"markdown","id":"b24f7473-c4cf-4d98-bc58-2516e8ac114a","metadata":{"id":"b24f7473-c4cf-4d98-bc58-2516e8ac114a"},"source":["In the name of God"]},{"cell_type":"code","execution_count":1,"id":"d60ad6f9-dea8-45b7-92ff-40da741cc150","metadata":{"id":"d60ad6f9-dea8-45b7-92ff-40da741cc150","executionInfo":{"status":"ok","timestamp":1731492278872,"user_tz":-60,"elapsed":8245,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sn\n","import os\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1ceB_OY_Syh3","executionInfo":{"status":"ok","timestamp":1731492297413,"user_tz":-60,"elapsed":18546,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"5b65132e-171a-4bc4-ba02-6b3048a3d4a8"},"id":"1ceB_OY_Syh3","execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":3,"id":"d02590eb-770a-4b21-9b66-837c0ae8afe6","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d02590eb-770a-4b21-9b66-837c0ae8afe6","executionInfo":{"status":"ok","timestamp":1731492306114,"user_tz":-60,"elapsed":8706,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"e57d4d4f-69c2-47db-d992-756a3d26be92"},"outputs":[{"output_type":"stream","name":"stdout","text":["dict_keys(['beeradvocate_beers', 'beeradvocate_breweries', 'beeradvocate_users', 'ratebeer_beers', 'ratebeer_breweries', 'ratebeer_users'])\n"]}],"source":["# Define the root directory and subfolders with filenames\n","root_dir = '/content/drive/My Drive/ADA'\n","subfolders = ['BeerAdvocate', 'RateBeer']\n","filenames = ['beers.csv', 'breweries.csv', 'users.csv']\n","\n","# Dictionary to store DataFrames\n","data = {}\n","\n","# Loop through each subfolder and filename to load data dynamically\n","for subfolder in subfolders:\n","    for filename in filenames:\n","        file_path = os.path.join(root_dir, subfolder, filename)\n","        # Create a descriptive key for each DataFrame\n","        key = f\"{subfolder.lower()}_{filename.split('.')[0]}\"\n","\n","        if os.path.exists(file_path):\n","            data[key] = pd.read_csv(file_path)\n","        else:\n","            print(f\"File {file_path} not found.\")\n","\n","# Load the user review summary file separately\n","user_review_summary = pd.read_csv(os.path.join(root_dir, 'Adding_nbr_reviews_userid_ratebeer.csv'))\n","\n","print(data.keys())  # To see loaded DataFrame keys"]},{"cell_type":"code","execution_count":4,"id":"fa1c24eb-8ad8-4814-8a92-3485933cfad9","metadata":{"id":"fa1c24eb-8ad8-4814-8a92-3485933cfad9","executionInfo":{"status":"ok","timestamp":1731492306115,"user_tz":-60,"elapsed":7,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}}},"outputs":[],"source":["# Dropping Duplicates in all csv files\n","\n","data['ratebeer_users'] = data['ratebeer_users'].drop_duplicates(subset = 'user_id')\n","data['beeradvocate_users'] = data['beeradvocate_users'].drop_duplicates(subset = 'user_id')\n","\n","data['ratebeer_beers'] = data['ratebeer_beers'].drop_duplicates(subset = 'beer_id')\n","data['beeradvocate_beers'] = data['beeradvocate_beers'].drop_duplicates(subset = 'beer_id')\n","\n","data['ratebeer_breweries'] = data['ratebeer_breweries'].drop_duplicates(subset = 'id')\n","data['beeradvocate_breweries'] = data['beeradvocate_breweries'].drop_duplicates(subset = 'id')\n","\n","user_review_summary = user_review_summary.drop_duplicates(subset = 'user_id')"]},{"cell_type":"code","execution_count":5,"id":"d4a4b68e-d069-442d-a469-28782dc86ffe","metadata":{"id":"d4a4b68e-d069-442d-a469-28782dc86ffe","executionInfo":{"status":"ok","timestamp":1731492306115,"user_tz":-60,"elapsed":6,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}}},"outputs":[],"source":["data['ratebeer_users'] = data['ratebeer_users'].merge(\n","        user_review_summary[['user_id', 'nbr_reviews']], on='user_id', how='inner')\n","\n","# Define the desired column order for data['ratebeer_users'] and data[beeradvocate_users]\n","new_order = ['user_id', 'user_name', 'nbr_ratings', 'nbr_reviews', 'joined', 'location']\n","\n","# Reorder columns in data['ratebeer_users'] and data['beeradvocate_users']\n","data['ratebeer_users'] = data['ratebeer_users'][new_order]\n","data['beeradvocate_users'] = data['beeradvocate_users'][new_order]"]},{"cell_type":"markdown","id":"fbfe3a2f-2bac-4951-9d79-25ed5616bd86","metadata":{"id":"fbfe3a2f-2bac-4951-9d79-25ed5616bd86"},"source":["# PreAnalysis for Users datasets"]},{"cell_type":"code","execution_count":6,"id":"8026b4dd-de31-48d8-a08b-985f9e203611","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8026b4dd-de31-48d8-a08b-985f9e203611","executionInfo":{"status":"ok","timestamp":1731492306115,"user_tz":-60,"elapsed":5,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"6ffe76fe-e60f-4d5c-8397-4e64c8c32e70"},"outputs":[{"output_type":"stream","name":"stdout","text":["user_id          int64\n","user_name       object\n","nbr_ratings      int64\n","nbr_reviews      int64\n","joined         float64\n","location        object\n","dtype: object\n","user_id         object\n","user_name       object\n","nbr_ratings      int64\n","nbr_reviews      int64\n","joined         float64\n","location        object\n","dtype: object\n"]}],"source":["print(data['ratebeer_users'].dtypes)\n","print(data['beeradvocate_users'].dtypes)"]},{"cell_type":"code","execution_count":7,"id":"018290a6-fad4-4032-abd3-6294133bfd64","metadata":{"id":"018290a6-fad4-4032-abd3-6294133bfd64","executionInfo":{"status":"ok","timestamp":1731492306748,"user_tz":-60,"elapsed":637,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}}},"outputs":[],"source":["# Convert object type to string for columns which are necessery\n","data['ratebeer_users']['user_name'] = data['ratebeer_users']['user_name'].astype('string')\n","data['ratebeer_users']['location'] = data['ratebeer_users']['location'].astype('string')\n","\n","data['beeradvocate_users']['user_id'] = data['beeradvocate_users']['user_id'].astype('string')\n","data['beeradvocate_users']['user_name'] = data['beeradvocate_users']['user_name'].astype('string')\n","data['beeradvocate_users']['location'] = data['beeradvocate_users']['location'].astype('string')\n","\n","# Convert 'joined' column from Unix timestamp to datetime format\n","data['ratebeer_users']['joined'] = pd.to_datetime(data['ratebeer_users']['joined'], unit='s')\n","data['beeradvocate_users']['joined'] = pd.to_datetime(data['beeradvocate_users']['joined'], unit='s')\n","\n","# Droping Nans in joined and location columns because we can't fill them!\n","data['ratebeer_users'] = data['ratebeer_users'].dropna(subset=['location', 'joined'])\n","data['beeradvocate_users'] = data['beeradvocate_users'].dropna(subset=['location', 'joined'])\n","\n","# beeradvocate dataframe has one Nan in 'user_name' which we will fill it with its 'user_id'\n","data['beeradvocate_users']['user_name'] = data['beeradvocate_users']['user_name'].fillna(data['beeradvocate_users']['user_id'])"]},{"cell_type":"code","execution_count":8,"id":"59499ce3-2b5e-4ebe-97dc-5c0a2d200fb1","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"59499ce3-2b5e-4ebe-97dc-5c0a2d200fb1","executionInfo":{"status":"ok","timestamp":1731492306748,"user_tz":-60,"elapsed":12,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"1ee60714-a8ff-4e1b-fc4c-59683adf71ef"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   user_id     user_name  nbr_ratings  nbr_reviews              joined  \\\n","0   175852       Manslow         1890         1612 2012-05-20 10:00:00   \n","1   442761  MAGICuenca91           89           81 2017-01-10 11:00:00   \n","2   288889        Sibarh          169          162 2013-11-16 11:00:00   \n","3   250510       fombe89         3371         3056 2013-03-22 11:00:00   \n","4   122778    kevnic2008        13043        11866 2011-02-02 11:00:00   \n","\n","  location  \n","0   Poland  \n","1    Spain  \n","2   Poland  \n","3    Spain  \n","4  Germany  "],"text/html":["\n","  <div id=\"df-8bcd3403-71fd-4132-a26d-d55f5adc59ed\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>user_name</th>\n","      <th>nbr_ratings</th>\n","      <th>nbr_reviews</th>\n","      <th>joined</th>\n","      <th>location</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>175852</td>\n","      <td>Manslow</td>\n","      <td>1890</td>\n","      <td>1612</td>\n","      <td>2012-05-20 10:00:00</td>\n","      <td>Poland</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>442761</td>\n","      <td>MAGICuenca91</td>\n","      <td>89</td>\n","      <td>81</td>\n","      <td>2017-01-10 11:00:00</td>\n","      <td>Spain</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>288889</td>\n","      <td>Sibarh</td>\n","      <td>169</td>\n","      <td>162</td>\n","      <td>2013-11-16 11:00:00</td>\n","      <td>Poland</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>250510</td>\n","      <td>fombe89</td>\n","      <td>3371</td>\n","      <td>3056</td>\n","      <td>2013-03-22 11:00:00</td>\n","      <td>Spain</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>122778</td>\n","      <td>kevnic2008</td>\n","      <td>13043</td>\n","      <td>11866</td>\n","      <td>2011-02-02 11:00:00</td>\n","      <td>Germany</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8bcd3403-71fd-4132-a26d-d55f5adc59ed')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8bcd3403-71fd-4132-a26d-d55f5adc59ed button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8bcd3403-71fd-4132-a26d-d55f5adc59ed');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-06b03f77-68d5-4634-a4a3-218bd7f270b2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-06b03f77-68d5-4634-a4a3-218bd7f270b2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-06b03f77-68d5-4634-a4a3-218bd7f270b2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data['ratebeer_users']\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 122640,\n        \"min\": 122778,\n        \"max\": 442761,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          442761,\n          122778,\n          288889\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"user_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"MAGICuenca91\",\n          \"kevnic2008\",\n          \"Sibarh\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nbr_ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5389,\n        \"min\": 89,\n        \"max\": 13043,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          89,\n          13043,\n          169\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nbr_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4911,\n        \"min\": 81,\n        \"max\": 11866,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          81,\n          11866,\n          162\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"joined\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2011-02-02 11:00:00\",\n        \"max\": \"2017-01-10 11:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2017-01-10 11:00:00\",\n          \"2011-02-02 11:00:00\",\n          \"2013-11-16 11:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"location\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Poland\",\n          \"Spain\",\n          \"Germany\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}],"source":["data['ratebeer_users'].head(5)"]},{"cell_type":"code","execution_count":9,"id":"fa850af9-8bfb-4ab5-a1d1-17c04ea7908f","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"fa850af9-8bfb-4ab5-a1d1-17c04ea7908f","executionInfo":{"status":"ok","timestamp":1731492306749,"user_tz":-60,"elapsed":10,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"cb6ee1c1-af30-4616-b3f2-7db21a755b45"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 user_id        user_name  nbr_ratings  nbr_reviews  \\\n","0         nmann08.184925          nmann08         7820          465   \n","1     stjamesgate.163714      StJamesGate         2521         2504   \n","2          mdagnew.19527          mdagnew         1797         1143   \n","3  helloloser12345.10867  helloloser12345           31           31   \n","4        cypressbob.3708       cypressbob          604          604   \n","\n","               joined                   location  \n","0 2008-01-07 11:00:00  United States, Washington  \n","1 2007-10-08 10:00:00    United States, New York  \n","2 2005-05-18 10:00:00           Northern Ireland  \n","3 2004-11-25 11:00:00           Northern Ireland  \n","4 2003-11-20 11:00:00           Northern Ireland  "],"text/html":["\n","  <div id=\"df-3ae51d7b-4447-49c9-8291-c22b2f6a1b6d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>user_name</th>\n","      <th>nbr_ratings</th>\n","      <th>nbr_reviews</th>\n","      <th>joined</th>\n","      <th>location</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>nmann08.184925</td>\n","      <td>nmann08</td>\n","      <td>7820</td>\n","      <td>465</td>\n","      <td>2008-01-07 11:00:00</td>\n","      <td>United States, Washington</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>stjamesgate.163714</td>\n","      <td>StJamesGate</td>\n","      <td>2521</td>\n","      <td>2504</td>\n","      <td>2007-10-08 10:00:00</td>\n","      <td>United States, New York</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>mdagnew.19527</td>\n","      <td>mdagnew</td>\n","      <td>1797</td>\n","      <td>1143</td>\n","      <td>2005-05-18 10:00:00</td>\n","      <td>Northern Ireland</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>helloloser12345.10867</td>\n","      <td>helloloser12345</td>\n","      <td>31</td>\n","      <td>31</td>\n","      <td>2004-11-25 11:00:00</td>\n","      <td>Northern Ireland</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>cypressbob.3708</td>\n","      <td>cypressbob</td>\n","      <td>604</td>\n","      <td>604</td>\n","      <td>2003-11-20 11:00:00</td>\n","      <td>Northern Ireland</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ae51d7b-4447-49c9-8291-c22b2f6a1b6d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3ae51d7b-4447-49c9-8291-c22b2f6a1b6d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3ae51d7b-4447-49c9-8291-c22b2f6a1b6d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-908a134d-0c53-4615-90c8-7b752869771c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-908a134d-0c53-4615-90c8-7b752869771c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-908a134d-0c53-4615-90c8-7b752869771c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data['beeradvocate_users']\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"user_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"stjamesgate.163714\",\n          \"cypressbob.3708\",\n          \"mdagnew.19527\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"user_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"StJamesGate\",\n          \"cypressbob\",\n          \"mdagnew\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nbr_ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3101,\n        \"min\": 31,\n        \"max\": 7820,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2521,\n          604,\n          1797\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nbr_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 955,\n        \"min\": 31,\n        \"max\": 2504,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2504,\n          604,\n          1143\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"joined\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2003-11-20 11:00:00\",\n        \"max\": \"2008-01-07 11:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2007-10-08 10:00:00\",\n          \"2003-11-20 11:00:00\",\n          \"2005-05-18 10:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"location\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"United States, Washington\",\n          \"United States, New York\",\n          \"Northern Ireland\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}],"source":["data['beeradvocate_users'].head(5)"]},{"cell_type":"markdown","id":"66327bf6-898c-47ac-accd-53e656321d97","metadata":{"id":"66327bf6-898c-47ac-accd-53e656321d97"},"source":["### Dataset Description\n","\n","These two datasets contain user information from two beer rating and review platforms, RateBeer and BeerAdvocate. Below is an overview of the columns in these user data tables:\n","\n","- **nbr_ratings**: The total number of ratings each user has given across various beers, reflecting their level of engagement with rating on the platform.\n","\n","- **nbr_reviews**: The total number of detailed reviews a user has contributed, offering qualitative feedback on their beer experiences.\n","\n","- **user_id**: A unique identifier for each user. In the BeerAdvocate dataset, `user_id` typically includes both the username and a numerical suffix to differentiate similar usernames. In the RateBeer dataset, `user_id` is usually represented as a standalone numerical code, unique to each user.\n","\n","- **user_name**: The display name or alias chosen by the user, used for interaction within the platform.\n","\n","- **joined**: The date and time when the user joined the platform.\n","\n","- **location**: The user’s reported location, which often includes the country and, in some cases, the state or province. This can help in analyzing geographic trends in user activity or preferences."]},{"cell_type":"code","execution_count":10,"id":"03b18c41-6224-4001-9456-9390ae41f711","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":407},"id":"03b18c41-6224-4001-9456-9390ae41f711","executionInfo":{"status":"ok","timestamp":1731492309918,"user_tz":-60,"elapsed":3177,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"7c5b15e9-2ee6-49c0-c8fe-cbe43f652e8b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Extract data for plotting\n","x = data['beeradvocate_users']['nbr_ratings']\n","y = data['beeradvocate_users']['nbr_reviews']\n","colors = data['beeradvocate_users']['location']\n","\n","# Calculate the best-fit line (correlation line)\n","slope, intercept = np.polyfit(x, y, 1)  # 1 indicates a linear fit (first-degree polynomial)\n","\n","# Plot the scatter plot and the correlation line\n","plt.figure(figsize = (6, 4))\n","plt.scatter(x, y, alpha = 0.7, label=\"Data Points\")\n","plt.plot(x, slope * x + intercept, color = \"red\", linewidth = 2, label = \"Correlation Line\")\n","\n","# Add labels and title\n","plt.xlabel(\"Number of Ratings\", size = 10)\n","plt.ylabel(\"Number of Reviews\", size = 10)\n","plt.title(\"Scatter Plot of Number of Ratings vs. Number of Reviews with Correlation Line\", size = 10)\n","plt.legend()\n","plt.show()"]},{"cell_type":"code","source":["# Count the number of users from the United States for both datasets\n","beeradvocate_us_users_count = data['beeradvocate_users']['location'].str.contains('United States').sum()\n","ratebeer_us_users_count = data['ratebeer_users']['location'].str.contains('United States').sum()\n","\n","# Count the number of users from other locations for both datasets\n","beeradvocate_other_users_count = len(data['beeradvocate_users']) - beeradvocate_us_users_count\n","ratebeer_other_users_count = len(data['ratebeer_users']) - ratebeer_us_users_count\n","\n","plt.figure(figsize=(10, 5))\n","\n","# Bar plot for BeerAdvocate users\n","plt.subplot(1, 2, 1)\n","plt.bar(['United States', 'Other Locations'], [beeradvocate_us_users_count, beeradvocate_other_users_count], color=['lightblue', 'plum'])\n","plt.title('BeerAdvocate Users: United States vs. Other Locations')\n","plt.ylabel('Number of Users')\n","\n","# Bar plot for RateBeer users\n","plt.subplot(1, 2, 2)\n","plt.bar(['United States', 'Other Locations'], [ratebeer_us_users_count, ratebeer_other_users_count], color=['lightblue', 'plum'])\n","plt.title('RateBeer Users: United States vs. Other Locations')\n","plt.ylabel('Number of Users')\n","\n","# Show the plots\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":507},"id":"NLsH-5NH4Twk","executionInfo":{"status":"ok","timestamp":1731492310342,"user_tz":-60,"elapsed":426,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"4a20b7a4-4226-4875-f2e0-fe1daf272da1"},"id":"NLsH-5NH4Twk","execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# PreAnalysis for breweries datasets"],"metadata":{"id":"zMPMKT419AnT"},"id":"zMPMKT419AnT"},{"cell_type":"code","source":["print(data['beeradvocate_breweries'].dtypes)\n","print(data['ratebeer_breweries'].dtypes)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hg8DaqgAC8qq","executionInfo":{"status":"ok","timestamp":1731492310342,"user_tz":-60,"elapsed":8,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"3084b8cd-1161-4616-ee58-cb6fdc6bf331"},"id":"hg8DaqgAC8qq","execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["id            int64\n","location     object\n","name         object\n","nbr_beers     int64\n","dtype: object\n","id            int64\n","location     object\n","name         object\n","nbr_beers     int64\n","dtype: object\n"]}]},{"cell_type":"code","source":["# Convert object type to string\n","data['beeradvocate_breweries']['name'] = data['beeradvocate_breweries']['name'].astype('string')\n","data['beeradvocate_breweries']['location'] = data['beeradvocate_breweries']['location'].astype('string')\n","\n","data['ratebeer_breweries']['name'] = data['ratebeer_breweries']['name'].astype('string')\n","data['ratebeer_breweries']['location'] = data['ratebeer_breweries']['location'].astype('string')\n","\n","# Checking for Nan in both datasets\n","if data['ratebeer_breweries'].isnull().values.any():\n","  print(\"ratebeer_breweries has NaN values.\")\n","else:\n","  print(\"ratebeer_breweries does not have NaN values.\")\n","\n","if data['beeradvocate_breweries'].isnull().values.any():\n","  print(\"beeradvocate_breweries has NaN values.\")\n","else:\n","  print(\"beeradvocate_breweries does not have NaN values.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L_lS0_sSDvc7","executionInfo":{"status":"ok","timestamp":1731492310342,"user_tz":-60,"elapsed":7,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"ff3a56c0-81d6-4bfe-d76a-1cebc635b3cb"},"id":"L_lS0_sSDvc7","execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["ratebeer_breweries does not have NaN values.\n","beeradvocate_breweries does not have NaN values.\n"]}]},{"cell_type":"code","execution_count":14,"id":"ab28f1a6-996e-41f6-9705-c781cd3628dc","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"ab28f1a6-996e-41f6-9705-c781cd3628dc","executionInfo":{"status":"ok","timestamp":1731492310342,"user_tz":-60,"elapsed":5,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"76973af6-d9b9-47fb-d8b9-291cc938715f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id    location                    name  nbr_beers\n","0  39912  Kyrgyzstan  Abdysh-Ata (Абдыш Ата)          5\n","1  39913  Kyrgyzstan             Arpa (АРПА)          1\n","2  39914  Kyrgyzstan               Bear Beer          4\n","3  39915  Kyrgyzstan             Blonder Pub          4\n","4  39916  Kyrgyzstan            Kellers Bier          2"],"text/html":["\n","  <div id=\"df-3d85bab8-57fd-450b-827a-ad5b201c06e4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>location</th>\n","      <th>name</th>\n","      <th>nbr_beers</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39912</td>\n","      <td>Kyrgyzstan</td>\n","      <td>Abdysh-Ata (Абдыш Ата)</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>39913</td>\n","      <td>Kyrgyzstan</td>\n","      <td>Arpa (АРПА)</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>39914</td>\n","      <td>Kyrgyzstan</td>\n","      <td>Bear Beer</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>39915</td>\n","      <td>Kyrgyzstan</td>\n","      <td>Blonder Pub</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>39916</td>\n","      <td>Kyrgyzstan</td>\n","      <td>Kellers Bier</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d85bab8-57fd-450b-827a-ad5b201c06e4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3d85bab8-57fd-450b-827a-ad5b201c06e4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3d85bab8-57fd-450b-827a-ad5b201c06e4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d5e1a98b-3dab-4a7f-a073-ed844ceb669f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d5e1a98b-3dab-4a7f-a073-ed844ceb669f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d5e1a98b-3dab-4a7f-a073-ed844ceb669f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data['beeradvocate_breweries']\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 39912,\n        \"max\": 39916,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          39913,\n          39916,\n          39914\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"location\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Kyrgyzstan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Arpa (\\u0410\\u0420\\u041f\\u0410)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nbr_beers\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}],"source":["data['beeradvocate_breweries'].head(5)"]},{"cell_type":"code","execution_count":15,"id":"c4423ccb-fb94-4edf-ad6e-0afc0cf01522","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"c4423ccb-fb94-4edf-ad6e-0afc0cf01522","executionInfo":{"status":"ok","timestamp":1731492310342,"user_tz":-60,"elapsed":5,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"1aa510eb-5310-40c0-e287-0c3c4ef77a09"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id          location                       name  nbr_beers\n","0   3198             Gabon                    Sobraga          3\n","1  13538  Northern Ireland           Ards Brewing Co.         13\n","2  22304  Northern Ireland  Barrahooley Craft Brewery          4\n","3  22818  Northern Ireland                   Boundary         66\n","4  24297  Northern Ireland            Brewbot Belfast          3"],"text/html":["\n","  <div id=\"df-048d45f2-c21b-4e39-b25b-7f043f5dcf74\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>location</th>\n","      <th>name</th>\n","      <th>nbr_beers</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3198</td>\n","      <td>Gabon</td>\n","      <td>Sobraga</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>13538</td>\n","      <td>Northern Ireland</td>\n","      <td>Ards Brewing Co.</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>22304</td>\n","      <td>Northern Ireland</td>\n","      <td>Barrahooley Craft Brewery</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>22818</td>\n","      <td>Northern Ireland</td>\n","      <td>Boundary</td>\n","      <td>66</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24297</td>\n","      <td>Northern Ireland</td>\n","      <td>Brewbot Belfast</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-048d45f2-c21b-4e39-b25b-7f043f5dcf74')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-048d45f2-c21b-4e39-b25b-7f043f5dcf74 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-048d45f2-c21b-4e39-b25b-7f043f5dcf74');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6f77fbe6-46fa-42fe-a5d2-b0110f84bf24\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6f77fbe6-46fa-42fe-a5d2-b0110f84bf24')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6f77fbe6-46fa-42fe-a5d2-b0110f84bf24 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data['ratebeer_breweries']\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8908,\n        \"min\": 3198,\n        \"max\": 24297,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          13538,\n          24297,\n          22304\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"location\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Northern Ireland\",\n          \"Gabon\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Ards Brewing Co.\",\n          \"Brewbot Belfast\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nbr_beers\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27,\n        \"min\": 3,\n        \"max\": 66,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          13,\n          66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}],"source":["data['ratebeer_breweries'].head(5)"]},{"cell_type":"code","execution_count":16,"id":"0149fb5d-9f8f-4ad3-ad3e-d767d55efb96","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"id":"0149fb5d-9f8f-4ad3-ad3e-d767d55efb96","executionInfo":{"status":"ok","timestamp":1731492310343,"user_tz":-60,"elapsed":5,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"42180ff5-7478-4fad-8fb6-8b25710c3b3a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["          id                      location  \\\n","10691   2837   United States, Pennsylvania   \n","14031  16083       United States, Illinois   \n","15759   1099        United States, Arizona   \n","10542   1100        United States, Arizona   \n","8106    2981      United States, Wisconsin   \n","15564     16  United States, Massachusetts   \n","10453   1137       United States, Maryland   \n","14030   9620       United States, Illinois   \n","13437   7066         United States, Oregon   \n","16264   3059        United States, Arizona   \n","\n","                                                  name  nbr_beers  \n","10691               Rock Bottom Restaurant and Brewery       1196  \n","14031               Rock Bottom Restaurant and Brewery       1196  \n","15759                 Rock Bottom Restaurant & Brewery       1196  \n","10542     Rock Bottom Restaurant & Brewery - Arrowhead       1196  \n","8106                  Rock Bottom Restaurant & Brewery       1196  \n","15564                 Rock Bottom Restaurant & Brewery       1196  \n","10453               Rock Bottom Restaurant and Brewery       1196  \n","14030               Rock Bottom Restaurant and Brewery       1196  \n","13437               Rock Bottom Restaurant and Brewery       1196  \n","16264  Rock Bottom Restaurant & Brewery - Desert Ridge       1196  "],"text/html":["\n","  <div id=\"df-c3a09c20-fcb6-48f2-8be4-f7fbcb1fa7a3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>location</th>\n","      <th>name</th>\n","      <th>nbr_beers</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>10691</th>\n","      <td>2837</td>\n","      <td>United States, Pennsylvania</td>\n","      <td>Rock Bottom Restaurant and Brewery</td>\n","      <td>1196</td>\n","    </tr>\n","    <tr>\n","      <th>14031</th>\n","      <td>16083</td>\n","      <td>United States, Illinois</td>\n","      <td>Rock Bottom Restaurant and Brewery</td>\n","      <td>1196</td>\n","    </tr>\n","    <tr>\n","      <th>15759</th>\n","      <td>1099</td>\n","      <td>United States, Arizona</td>\n","      <td>Rock Bottom Restaurant &amp; Brewery</td>\n","      <td>1196</td>\n","    </tr>\n","    <tr>\n","      <th>10542</th>\n","      <td>1100</td>\n","      <td>United States, Arizona</td>\n","      <td>Rock Bottom Restaurant &amp; Brewery - Arrowhead</td>\n","      <td>1196</td>\n","    </tr>\n","    <tr>\n","      <th>8106</th>\n","      <td>2981</td>\n","      <td>United States, Wisconsin</td>\n","      <td>Rock Bottom Restaurant &amp; Brewery</td>\n","      <td>1196</td>\n","    </tr>\n","    <tr>\n","      <th>15564</th>\n","      <td>16</td>\n","      <td>United States, Massachusetts</td>\n","      <td>Rock Bottom Restaurant &amp; Brewery</td>\n","      <td>1196</td>\n","    </tr>\n","    <tr>\n","      <th>10453</th>\n","      <td>1137</td>\n","      <td>United States, Maryland</td>\n","      <td>Rock Bottom Restaurant and Brewery</td>\n","      <td>1196</td>\n","    </tr>\n","    <tr>\n","      <th>14030</th>\n","      <td>9620</td>\n","      <td>United States, Illinois</td>\n","      <td>Rock Bottom Restaurant and Brewery</td>\n","      <td>1196</td>\n","    </tr>\n","    <tr>\n","      <th>13437</th>\n","      <td>7066</td>\n","      <td>United States, Oregon</td>\n","      <td>Rock Bottom Restaurant and Brewery</td>\n","      <td>1196</td>\n","    </tr>\n","    <tr>\n","      <th>16264</th>\n","      <td>3059</td>\n","      <td>United States, Arizona</td>\n","      <td>Rock Bottom Restaurant &amp; Brewery - Desert Ridge</td>\n","      <td>1196</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3a09c20-fcb6-48f2-8be4-f7fbcb1fa7a3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c3a09c20-fcb6-48f2-8be4-f7fbcb1fa7a3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c3a09c20-fcb6-48f2-8be4-f7fbcb1fa7a3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7ded5a72-25f7-4f62-9e1e-d328e9f92c39\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7ded5a72-25f7-4f62-9e1e-d328e9f92c39')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7ded5a72-25f7-4f62-9e1e-d328e9f92c39 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data['beeradvocate_breweries']\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5040,\n        \"min\": 16,\n        \"max\": 16083,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          7066,\n          16083,\n          16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"location\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"United States, Pennsylvania\",\n          \"United States, Illinois\",\n          \"United States, Maryland\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Rock Bottom Restaurant & Brewery\",\n          \"Rock Bottom Restaurant & Brewery - Desert Ridge\",\n          \"Rock Bottom Restaurant and Brewery\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nbr_beers\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1196,\n        \"max\": 1196,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1196\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}],"source":["data['beeradvocate_breweries'].sort_values(by='nbr_beers', ascending=False).head(10)"]},{"cell_type":"code","execution_count":17,"id":"3324304b-6fb4-4617-b67a-377e4d67c634","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"id":"3324304b-6fb4-4617-b67a-377e4d67c634","executionInfo":{"status":"ok","timestamp":1731492310343,"user_tz":-60,"elapsed":5,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"7c634bad-a0d8-47a3-d47c-480d26c8d6f4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["          id                      location                          name  \\\n","12494  20106                        Poland                 Browar Wąsosz   \n","14870  14248  United States, Massachusetts           Night Shift Brewing   \n","21426   2292                       England                       Rudgate   \n","16961  13326       United States, Missouri        Perennial Artisan Ales   \n","13644  17792     United States, California   Cellarmaker Brewing Company   \n","21861   4443                       England                   Thornbridge   \n","19411    489    United States, Connecticut   Willimantic Brewing Company   \n","18191  14870        United States, Florida         Proof Brewing Company   \n","13846    340     United States, California  Karl Strauss Brewing Company   \n","20942   3911                       England                Brodies Beers   \n","\n","       nbr_beers  \n","12494        295  \n","14870        291  \n","21426        290  \n","16961        290  \n","13644        289  \n","21861        283  \n","19411        283  \n","18191        282  \n","13846        280  \n","20942        279  "],"text/html":["\n","  <div id=\"df-b55a02b9-d831-4425-9c9f-3529cee6196f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>location</th>\n","      <th>name</th>\n","      <th>nbr_beers</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>12494</th>\n","      <td>20106</td>\n","      <td>Poland</td>\n","      <td>Browar Wąsosz</td>\n","      <td>295</td>\n","    </tr>\n","    <tr>\n","      <th>14870</th>\n","      <td>14248</td>\n","      <td>United States, Massachusetts</td>\n","      <td>Night Shift Brewing</td>\n","      <td>291</td>\n","    </tr>\n","    <tr>\n","      <th>21426</th>\n","      <td>2292</td>\n","      <td>England</td>\n","      <td>Rudgate</td>\n","      <td>290</td>\n","    </tr>\n","    <tr>\n","      <th>16961</th>\n","      <td>13326</td>\n","      <td>United States, Missouri</td>\n","      <td>Perennial Artisan Ales</td>\n","      <td>290</td>\n","    </tr>\n","    <tr>\n","      <th>13644</th>\n","      <td>17792</td>\n","      <td>United States, California</td>\n","      <td>Cellarmaker Brewing Company</td>\n","      <td>289</td>\n","    </tr>\n","    <tr>\n","      <th>21861</th>\n","      <td>4443</td>\n","      <td>England</td>\n","      <td>Thornbridge</td>\n","      <td>283</td>\n","    </tr>\n","    <tr>\n","      <th>19411</th>\n","      <td>489</td>\n","      <td>United States, Connecticut</td>\n","      <td>Willimantic Brewing Company</td>\n","      <td>283</td>\n","    </tr>\n","    <tr>\n","      <th>18191</th>\n","      <td>14870</td>\n","      <td>United States, Florida</td>\n","      <td>Proof Brewing Company</td>\n","      <td>282</td>\n","    </tr>\n","    <tr>\n","      <th>13846</th>\n","      <td>340</td>\n","      <td>United States, California</td>\n","      <td>Karl Strauss Brewing Company</td>\n","      <td>280</td>\n","    </tr>\n","    <tr>\n","      <th>20942</th>\n","      <td>3911</td>\n","      <td>England</td>\n","      <td>Brodies Beers</td>\n","      <td>279</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b55a02b9-d831-4425-9c9f-3529cee6196f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b55a02b9-d831-4425-9c9f-3529cee6196f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b55a02b9-d831-4425-9c9f-3529cee6196f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f7bf41eb-c0fd-4f09-8d0a-d626ebf3eae7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f7bf41eb-c0fd-4f09-8d0a-d626ebf3eae7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f7bf41eb-c0fd-4f09-8d0a-d626ebf3eae7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data['ratebeer_breweries']\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7602,\n        \"min\": 340,\n        \"max\": 20106,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          340,\n          14248,\n          4443\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"location\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Poland\",\n          \"United States, Massachusetts\",\n          \"United States, Connecticut\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Karl Strauss Brewing Company\",\n          \"Night Shift Brewing\",\n          \"Thornbridge\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nbr_beers\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 279,\n        \"max\": 295,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          291,\n          282,\n          295\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}],"source":["data['ratebeer_breweries'].sort_values(by='nbr_beers', ascending=False).head(10)"]},{"cell_type":"markdown","id":"690730ed-6335-4c5f-9e39-e2a66b693d81","metadata":{"id":"690730ed-6335-4c5f-9e39-e2a66b693d81"},"source":["### Dataset Description: Breweries Data\n","\n","These datasets contain information about breweries listed on two different beer rating platforms: BeerAdvocate and RateBeer.\n","\n","- **id**: A unique identifier for each brewery. The ID is specific to each platform and used to distinguish individual breweries in the dataset.\n","\n","- **location**: The geographic location of the brewery, typically specifying the country, and sometimes the region or state. This information provides insight into the distribution of breweries globally and may be used to explore regional brewing patterns or trends.\n","\n","- **name**: The name of the brewery. This is the recognizable label associated with each brewery, often reflecting the brand or business name.\n","\n","- **nbr_beers**: The number of unique beers produced by each brewery. This column offers insight into the scale or variety of production for each brewery, with higher values indicating a larger selection of beers."]},{"cell_type":"markdown","source":["# PreAnalysis for beers datasets"],"metadata":{"id":"sbXm7eTyCgMv"},"id":"sbXm7eTyCgMv"},{"cell_type":"code","execution_count":18,"id":"8dc37a6c-77f3-4898-803e-ef131c3e3949","metadata":{"id":"8dc37a6c-77f3-4898-803e-ef131c3e3949","executionInfo":{"status":"ok","timestamp":1731492311939,"user_tz":-60,"elapsed":1601,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}}},"outputs":[],"source":["beer_reviews_summary = pd.read_csv('/content/drive/My Drive/ADA/Adding_nbr_reviews_beerid_ratebeer.csv')\n","data['ratebeer_beers'] = data['ratebeer_beers'].merge(beer_reviews_summary[['beer_id','nbr_reviews']], on = ['beer_id'], how = 'inner')"]},{"cell_type":"code","source":["# List of columns to check for NaN values\n","columns_to_check = ['ba_score', 'bros_score', 'avg_computed', 'zscore', 'avg_matched_valid_ratings','nbr_matched_valid_ratings']\n","\n","# Iterate over each column in the list\n","for col in columns_to_check:\n","    # Check if the column exists in the DataFrame\n","    if col in data['beeradvocate_beers'].columns:\n","        # Calculate the percentage of NaN values\n","        nan_percentage = (data['beeradvocate_beers'][col].isnull().sum() / len(data['beeradvocate_beers'])) * 100\n","        print(f\"Percentage of NaN values in '{col}' column in beeradvocate_beers: {nan_percentage:.2f}%\")\n","    else:\n","        print(f\"Column '{col}' not found in beeradvocate_beers.\")\n","\n","if data['beeradvocate_beers']['nbr_matched_valid_ratings'].all() == 0:\n","  print(\"All values in 'nbr_matched_valid_ratings' are 0.\")\n","else:\n","  print(\"Not all values in 'nbr_matched_valid_ratings' are 0.\")\n","\n","data['beeradvocate_beers'] = data['beeradvocate_beers'].drop(columns = columns_to_check)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cB4VdQXkHvj9","executionInfo":{"status":"ok","timestamp":1731492311939,"user_tz":-60,"elapsed":7,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"c1152eb3-fd85-4c0a-8294-444112316cc2"},"id":"cB4VdQXkHvj9","execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Percentage of NaN values in 'ba_score' column in beeradvocate_beers: 78.21%\n","Percentage of NaN values in 'bros_score' column in beeradvocate_beers: 97.97%\n","Percentage of NaN values in 'avg_computed' column in beeradvocate_beers: 11.69%\n","Percentage of NaN values in 'zscore' column in beeradvocate_beers: 85.65%\n","Percentage of NaN values in 'avg_matched_valid_ratings' column in beeradvocate_beers: 89.93%\n","Percentage of NaN values in 'nbr_matched_valid_ratings' column in beeradvocate_beers: 0.00%\n","All values in 'nbr_matched_valid_ratings' are 0.\n"]}]},{"cell_type":"code","source":["# Checking percentage os missing values in some columns\n","columns_to_check = ['overall_score', 'style_score', 'zscore','avg_matched_valid_ratings','nbr_matched_valid_ratings']\n","\n","for col in columns_to_check:\n","  if col in data['ratebeer_beers'].columns:\n","    nan_percentage = (data['ratebeer_beers'][col].isnull().sum() / len(data['ratebeer_beers'])) * 100\n","    print(f\"Percentage of NaN values in '{col}' column in ratebeer_beers: {nan_percentage:.2f}%\")\n","  else:\n","    print(f\"Column '{col}' not found in ratebeer_beers.\")\n","\n","if data['ratebeer_beers']['nbr_matched_valid_ratings'].all() == 0:\n","  print(\"All values in 'nbr_matched_valid_ratings' are 0.\")\n","else:\n","  print(\"Not all values in 'nbr_matched_valid_ratings' are 0.\")\n","\n","data['ratebeer_beers'] = data['ratebeer_beers'].drop(columns = columns_to_check)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xoA3NcY8FVuR","executionInfo":{"status":"ok","timestamp":1731492311939,"user_tz":-60,"elapsed":6,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"55712370-2a5b-452e-c0a6-6d97eb1caaa1"},"id":"xoA3NcY8FVuR","execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Percentage of NaN values in 'overall_score' column in ratebeer_beers: 73.78%\n","Percentage of NaN values in 'style_score' column in ratebeer_beers: 73.77%\n","Percentage of NaN values in 'zscore' column in ratebeer_beers: 89.35%\n","Percentage of NaN values in 'avg_matched_valid_ratings' column in ratebeer_beers: 89.35%\n","Percentage of NaN values in 'nbr_matched_valid_ratings' column in ratebeer_beers: 0.00%\n","All values in 'nbr_matched_valid_ratings' are 0.\n"]}]},{"cell_type":"code","execution_count":21,"id":"e9bb2ec4-4394-47fc-bb1f-87a2d0444994","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"e9bb2ec4-4394-47fc-bb1f-87a2d0444994","executionInfo":{"status":"ok","timestamp":1731492311939,"user_tz":-60,"elapsed":5,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"f811c8c7-5167-4efd-ca12-ffb1a21dd5e4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   beer_id           beer_name  brewery_id            brewery_name  \\\n","0   166064    Nashe Moskovskoe       39912  Abdysh-Ata (Абдыш Ата)   \n","1   166065     Nashe Pivovskoe       39912  Abdysh-Ata (Абдыш Ата)   \n","2   166066  Nashe Shakhterskoe       39912  Abdysh-Ata (Абдыш Ата)   \n","3   166067  Nashe Zhigulevskoe       39912  Abdysh-Ata (Абдыш Ата)   \n","4   166063              Zhivoe       39912  Abdysh-Ata (Абдыш Ата)   \n","\n","             style  nbr_ratings  nbr_reviews  avg  abv  \n","0  Euro Pale Lager            0            0  NaN  4.7  \n","1  Euro Pale Lager            0            0  NaN  3.8  \n","2  Euro Pale Lager            0            0  NaN  4.8  \n","3  Euro Pale Lager            0            0  NaN  4.0  \n","4  Euro Pale Lager            0            0  NaN  4.5  "],"text/html":["\n","  <div id=\"df-439108a3-2593-4003-8ebb-7a59bd93cb64\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>beer_id</th>\n","      <th>beer_name</th>\n","      <th>brewery_id</th>\n","      <th>brewery_name</th>\n","      <th>style</th>\n","      <th>nbr_ratings</th>\n","      <th>nbr_reviews</th>\n","      <th>avg</th>\n","      <th>abv</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>166064</td>\n","      <td>Nashe Moskovskoe</td>\n","      <td>39912</td>\n","      <td>Abdysh-Ata (Абдыш Ата)</td>\n","      <td>Euro Pale Lager</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>4.7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>166065</td>\n","      <td>Nashe Pivovskoe</td>\n","      <td>39912</td>\n","      <td>Abdysh-Ata (Абдыш Ата)</td>\n","      <td>Euro Pale Lager</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>3.8</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>166066</td>\n","      <td>Nashe Shakhterskoe</td>\n","      <td>39912</td>\n","      <td>Abdysh-Ata (Абдыш Ата)</td>\n","      <td>Euro Pale Lager</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>4.8</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>166067</td>\n","      <td>Nashe Zhigulevskoe</td>\n","      <td>39912</td>\n","      <td>Abdysh-Ata (Абдыш Ата)</td>\n","      <td>Euro Pale Lager</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>166063</td>\n","      <td>Zhivoe</td>\n","      <td>39912</td>\n","      <td>Abdysh-Ata (Абдыш Ата)</td>\n","      <td>Euro Pale Lager</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>4.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-439108a3-2593-4003-8ebb-7a59bd93cb64')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-439108a3-2593-4003-8ebb-7a59bd93cb64 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-439108a3-2593-4003-8ebb-7a59bd93cb64');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8e04a419-a7f6-4f7e-9e99-c081cdf1328f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8e04a419-a7f6-4f7e-9e99-c081cdf1328f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8e04a419-a7f6-4f7e-9e99-c081cdf1328f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data['beeradvocate_beers']\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"beer_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 166063,\n        \"max\": 166067,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          166065,\n          166063,\n          166066\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"beer_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Nashe Pivovskoe\",\n          \"Zhivoe\",\n          \"Nashe Shakhterskoe\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"brewery_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 39912,\n        \"max\": 39912,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          39912\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"brewery_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Abdysh-Ata (\\u0410\\u0431\\u0434\\u044b\\u0448 \\u0410\\u0442\\u0430)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"style\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Euro Pale Lager\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nbr_ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nbr_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"avg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"abv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.439317652729776,\n        \"min\": 3.8,\n        \"max\": 4.8,\n        \"num_unique_values\": 5,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}],"source":["data['beeradvocate_beers'].head(5)"]},{"cell_type":"code","execution_count":22,"id":"24a51b57-4885-4b0d-9219-a46414e70ec0","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"24a51b57-4885-4b0d-9219-a46414e70ec0","executionInfo":{"status":"ok","timestamp":1731492311939,"user_tz":-60,"elapsed":4,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"14871938-dec6-472b-86ae-9ee46f4238b8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   beer_id               beer_name  brewery_id      brewery_name  \\\n","0   410549       33 Export (Gabon)        3198           Sobraga   \n","1   105273     Castel Beer (Gabon)        3198           Sobraga   \n","2    19445                   Régab        3198           Sobraga   \n","3   155699  Ards Bally Black Stout       13538  Ards Brewing Co.   \n","4   239097        Ards Belfast 366       13538  Ards Brewing Co.   \n","\n","                  style  nbr_ratings   avg  abv  avg_computed  nbr_reviews  \n","0            Pale Lager            1  2.72  5.0      2.000000            1  \n","1            Pale Lager           10  2.18  5.2      1.910000           10  \n","2            Pale Lager           27  1.83  4.5      1.811111           27  \n","3                 Stout            6  3.18  4.6      3.866667            6  \n","4  Golden Ale/Blond Ale            1  2.79  4.2      3.000000            1  "],"text/html":["\n","  <div id=\"df-b70dbef2-7b47-47ab-aea5-55dbe9491a3d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>beer_id</th>\n","      <th>beer_name</th>\n","      <th>brewery_id</th>\n","      <th>brewery_name</th>\n","      <th>style</th>\n","      <th>nbr_ratings</th>\n","      <th>avg</th>\n","      <th>abv</th>\n","      <th>avg_computed</th>\n","      <th>nbr_reviews</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>410549</td>\n","      <td>33 Export (Gabon)</td>\n","      <td>3198</td>\n","      <td>Sobraga</td>\n","      <td>Pale Lager</td>\n","      <td>1</td>\n","      <td>2.72</td>\n","      <td>5.0</td>\n","      <td>2.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>105273</td>\n","      <td>Castel Beer (Gabon)</td>\n","      <td>3198</td>\n","      <td>Sobraga</td>\n","      <td>Pale Lager</td>\n","      <td>10</td>\n","      <td>2.18</td>\n","      <td>5.2</td>\n","      <td>1.910000</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>19445</td>\n","      <td>Régab</td>\n","      <td>3198</td>\n","      <td>Sobraga</td>\n","      <td>Pale Lager</td>\n","      <td>27</td>\n","      <td>1.83</td>\n","      <td>4.5</td>\n","      <td>1.811111</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>155699</td>\n","      <td>Ards Bally Black Stout</td>\n","      <td>13538</td>\n","      <td>Ards Brewing Co.</td>\n","      <td>Stout</td>\n","      <td>6</td>\n","      <td>3.18</td>\n","      <td>4.6</td>\n","      <td>3.866667</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>239097</td>\n","      <td>Ards Belfast 366</td>\n","      <td>13538</td>\n","      <td>Ards Brewing Co.</td>\n","      <td>Golden Ale/Blond Ale</td>\n","      <td>1</td>\n","      <td>2.79</td>\n","      <td>4.2</td>\n","      <td>3.000000</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b70dbef2-7b47-47ab-aea5-55dbe9491a3d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b70dbef2-7b47-47ab-aea5-55dbe9491a3d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b70dbef2-7b47-47ab-aea5-55dbe9491a3d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6af8e1e8-a218-4d72-93ed-18d416a69943\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6af8e1e8-a218-4d72-93ed-18d416a69943')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6af8e1e8-a218-4d72-93ed-18d416a69943 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data['ratebeer_beers']\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"beer_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 148675,\n        \"min\": 19445,\n        \"max\": 410549,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          105273,\n          239097,\n          19445\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"beer_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Castel Beer (Gabon)\",\n          \"Ards Belfast 366\",\n          \"R\\u00e9gab\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"brewery_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5663,\n        \"min\": 3198,\n        \"max\": 13538,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          13538,\n          3198\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"brewery_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Ards Brewing Co.\",\n          \"Sobraga\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"style\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Pale Lager\",\n          \"Stout\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nbr_ratings\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 1,\n        \"max\": 27,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          10,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"avg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5334322824876649,\n        \"min\": 1.83,\n        \"max\": 3.18,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2.18,\n          2.79\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"abv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4,\n        \"min\": 4.2,\n        \"max\": 5.2,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5.2,\n          4.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"avg_computed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8928752280355333,\n        \"min\": 1.8111111111111111,\n        \"max\": 3.866666666666666,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.91,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nbr_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 1,\n        \"max\": 27,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          10,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}],"source":["data['ratebeer_beers'].head(5)"]},{"cell_type":"markdown","id":"86cf0bdd-89ef-438d-8042-6f51cf0b3127","metadata":{"id":"86cf0bdd-89ef-438d-8042-6f51cf0b3127"},"source":["### Dataset Description: Beers Data for BeerAdvocate and RateBeer\n","\n","These datasets contain detailed information on individual beers from two platforms, BeerAdvocate and RateBeer.\n","\n","#### Shared Columns\n","- **beer_id** and **beer_name**: Unique identifier and name of each beer.\n","- **brewery_id** and **brewery_name**: Identifier and name of the brewery that produces the beer.\n","- **style**: The type or category of the beer (e.g., IPA, Stout).\n","- **nbr_ratings** and **nbr_reviews**: Total user ratings and reviews the beer has received.\n","- **avg**: Average rating given by users.\n","- **abv**: Alcohol by volume percentage, representing the beer’s strength.\n"]},{"cell_type":"code","source":["# Group by brewery name and count unique styles\n","brewery_style_counts = data['beeradvocate_beers'].groupby('brewery_name')['style'].nunique()\n","\n","# Sort by style count in descending order and get the top 10\n","top_10_diverse_breweries = brewery_style_counts.sort_values(ascending=False).head(10)\n","\n","print(\"Top 10 Most Diverse Breweries with Different Styles in BeerAdvocate:\")\n","top_10_diverse_breweries"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"J9Q2JrjKF5Ma","executionInfo":{"status":"ok","timestamp":1731492312334,"user_tz":-60,"elapsed":399,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"f26d86b8-6ef2-4db3-b28a-512ed7373b53"},"id":"J9Q2JrjKF5Ma","execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Top 10 Most Diverse Breweries with Different Styles in BeerAdvocate:\n"]},{"output_type":"execute_result","data":{"text/plain":["brewery_name\n","Iron Hill Brewery & Restaurant            90\n","Rock Bottom Restaurant & Brewery          89\n","Goose Island Beer Co.                     85\n","John Harvard's Brewery & Ale House        84\n","Cigar City Brewing                        81\n","Boston Beer Company (Samuel Adams)        81\n","Short's Brewing Company                   78\n","Sierra Nevada Brewing Co.                 78\n","Sixpoint Brewery                          77\n","Against The Grain Brewery & Smokehouse    77\n","Name: style, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>style</th>\n","    </tr>\n","    <tr>\n","      <th>brewery_name</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Iron Hill Brewery &amp; Restaurant</th>\n","      <td>90</td>\n","    </tr>\n","    <tr>\n","      <th>Rock Bottom Restaurant &amp; Brewery</th>\n","      <td>89</td>\n","    </tr>\n","    <tr>\n","      <th>Goose Island Beer Co.</th>\n","      <td>85</td>\n","    </tr>\n","    <tr>\n","      <th>John Harvard's Brewery &amp; Ale House</th>\n","      <td>84</td>\n","    </tr>\n","    <tr>\n","      <th>Cigar City Brewing</th>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>Boston Beer Company (Samuel Adams)</th>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>Short's Brewing Company</th>\n","      <td>78</td>\n","    </tr>\n","    <tr>\n","      <th>Sierra Nevada Brewing Co.</th>\n","      <td>78</td>\n","    </tr>\n","    <tr>\n","      <th>Sixpoint Brewery</th>\n","      <td>77</td>\n","    </tr>\n","    <tr>\n","      <th>Against The Grain Brewery &amp; Smokehouse</th>\n","      <td>77</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# Group by brewery name and count unique styles\n","brewery_style_counts = data['ratebeer_beers'].groupby('brewery_name')['style'].nunique()\n","\n","# Sort by style count in descending order and get the top 10\n","top_10_diverse_breweries = brewery_style_counts.sort_values(ascending=False).head(10)\n","\n","print(\"Top 10 Most Diverse Breweries with Different Styles in RateBeer:\")\n","top_10_diverse_breweries"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"EGIXpgIuEoM2","executionInfo":{"status":"ok","timestamp":1731492312334,"user_tz":-60,"elapsed":4,"user":{"displayName":"Shahrzad Javidi","userId":"01649303990978482507"}},"outputId":"5b5314d3-317f-47cc-e678-2177d491c063"},"id":"EGIXpgIuEoM2","execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Top 10 Most Diverse Breweries with Different Styles in RateBeer:\n"]},{"output_type":"execute_result","data":{"text/plain":["brewery_name\n","New Holland Brewing Company                           64\n","Free State Brewing Company                            63\n","Devils Backbone Brewing Company &#40;AB InBev&#41;    63\n","Beer Works                                            63\n","Midnight Sun Brewing Company                          62\n","Bluegrass Brewing Company                             62\n","Portsmouth Brewery                                    62\n","Le Cheval Blanc                                       62\n","Triumph Brewing Company                               61\n","Harpoon Brewery                                       61\n","Name: style, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>style</th>\n","    </tr>\n","    <tr>\n","      <th>brewery_name</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>New Holland Brewing Company</th>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>Free State Brewing Company</th>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>Devils Backbone Brewing Company &amp;#40;AB InBev&amp;#41;</th>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>Beer Works</th>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>Midnight Sun Brewing Company</th>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>Bluegrass Brewing Company</th>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>Portsmouth Brewery</th>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>Le Cheval Blanc</th>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>Triumph Brewing Company</th>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>Harpoon Brewery</th>\n","      <td>61</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":24}]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.12.6"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}